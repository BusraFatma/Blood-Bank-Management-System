<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vTc65l15JgAAAABJRU5ErkJggg==
</value>
  </data>
</root>